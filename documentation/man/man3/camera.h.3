.TH "/home/zachary/libwallaby/module/camera/public/kipr/camera/camera.h" 3 "Mon Sep 12 2022" "Version 1.0.0" "libkipr" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/zachary/libwallaby/module/camera/public/kipr/camera/camera.h
.SH SYNOPSIS
.br
.PP
\fC#include 'kipr/geometry/geometry\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBpixel\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBpixel\fP \fBpixel\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBResolution\fP { \fBLOW_RES\fP, \fBMED_RES\fP, \fBHIGH_RES\fP, \fBTELLO_RES\fP, \fBNATIVE_RES\fP }"
.br
.ti -1c
.RI "enum \fBModel\fP { \fBWHITE_2016\fP, \fBBLACK_2017\fP, \fBTELLO\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBcamera_open\fP ()"
.br
.ti -1c
.RI "int \fBcamera_open_black\fP ()"
.br
.ti -1c
.RI "int \fBcamera_open_at_res\fP (enum \fBResolution\fP res)"
.br
.ti -1c
.RI "int \fBcamera_open_device\fP (int number, enum \fBResolution\fP res)"
.br
.ti -1c
.RI "int \fBcamera_open_device_model_at_res\fP (int number, enum \fBModel\fP model, enum \fBResolution\fP res)"
.br
.ti -1c
.RI "int \fBcamera_load_config\fP (const char *name)"
.br
.ti -1c
.RI "int \fBget_camera_width\fP (void)"
.br
.ti -1c
.RI "int \fBget_camera_height\fP (void)"
.br
.ti -1c
.RI "int \fBcamera_update\fP (void)"
.br
.ti -1c
.RI "\fBpixel\fP \fBget_camera_pixel\fP (\fBpoint2\fP p)"
.br
.ti -1c
.RI "int \fBget_channel_count\fP (void)"
.br
.ti -1c
.RI "int \fBget_object_count\fP (int channel)"
.br
.ti -1c
.RI "const char * \fBget_object_data\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_code_num\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_data_length\fP (int channel, int object)"
.br
.ti -1c
.RI "double \fBget_object_confidence\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_area\fP (int channel, int object)"
.br
.ti -1c
.RI "\fBrectangle\fP \fBget_object_bbox\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_bbox_ulx\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_bbox_uly\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_bbox_brx\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_bbox_bry\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_bbox_width\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_bbox_height\fP (int channel, int object)"
.br
.ti -1c
.RI "\fBpoint2\fP \fBget_object_centroid\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_centroid_column\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_centroid_x\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_centroid_row\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_centroid_y\fP (int channel, int object)"
.br
.ti -1c
.RI "\fBpoint2\fP \fBget_object_center\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_center_column\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_center_x\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_center_row\fP (int channel, int object)"
.br
.ti -1c
.RI "int \fBget_object_center_y\fP (int channel, int object)"
.br
.ti -1c
.RI "void \fBcamera_close\fP ()"
.br
.ti -1c
.RI "void \fBset_camera_config_base_path\fP (const char *const path)"
.br
.ti -1c
.RI "const unsigned char * \fBget_camera_frame_row\fP (unsigned row)"
.br
.ti -1c
.RI "const unsigned char * \fBget_camera_frame\fP ()"
.br
.ti -1c
.RI "unsigned \fBget_camera_element_size\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBCopyright\fP
.RS 4
KISS Institute for Practical Robotics 
.RE
.PP

.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBpixel\fP \fBpixel\fP"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBModel\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIWHITE_2016 \fP\fP
.TP
\fB\fIBLACK_2017 \fP\fP
.TP
\fB\fITELLO \fP\fP
.SS "enum \fBResolution\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fILOW_RES \fP\fP
.TP
\fB\fIMED_RES \fP\fP
.TP
\fB\fIHIGH_RES \fP\fP
.TP
\fB\fITELLO_RES \fP\fP
.TP
\fB\fINATIVE_RES \fP\fP
.SH "Function Documentation"
.PP 
.SS "unsigned get_camera_element_size ()"

.SS "int get_code_num (int channel, int object)"

.PP
\fBReturns\fP
.RS 4
The data associated with the given channel and object as an integer\&. If the given channel or object doesn't exist, -1 is returned\&. 
.RE
.PP
\fBSee also\fP
.RS 4
\fBget_object_data\fP 
.RE
.PP

.SS "int get_object_bbox_brx (int channel, int object)"

.SS "int get_object_bbox_bry (int channel, int object)"

.SS "int get_object_bbox_height (int channel, int object)"

.SS "int get_object_bbox_ulx (int channel, int object)"

.SS "int get_object_bbox_uly (int channel, int object)"

.SS "int get_object_bbox_width (int channel, int object)"

.SS "int get_object_center_column (int channel, int object)"

.SS "int get_object_center_row (int channel, int object)"

.SS "int get_object_center_x (int channel, int object)"

.SS "int get_object_center_y (int channel, int object)"

.SS "int get_object_centroid_column (int channel, int object)"

.SS "int get_object_centroid_row (int channel, int object)"

.SS "int get_object_centroid_x (int channel, int object)"

.SS "int get_object_centroid_y (int channel, int object)"

.SH "Author"
.PP 
Generated automatically by Doxygen for libkipr from the source code\&.
